apiVersion: v1
kind: Namespace
metadata:
  name: store
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: service-account
  namespace: store
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: auth:admin-role:store
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: auth:admin-role
subjects:
  - kind: ServiceAccount
    name: service-account
    namespace: store
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: postgres
  namespace: store
spec:
  serviceName: postgres-jdbc
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: postgres
          image: postgres
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: root
              mountPath: /var/lib/postgresql/data
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            # The name of the PostgreSQL user, that will be used from the Dirigible
            - name: POSTGRES_USER
              value: dirigible
            # The password for the PostgreSQL user, that will be used from the Dirigible
            - name: POSTGRES_PASSWORD
              value: dirigible
      serviceAccountName: service-account
  volumeClaimTemplates:
    - metadata:
        name: root
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-jdbc
  namespace: store
  labels:
    app: postgres
spec:
  ports:
  - port: 5432
  type: ClusterIP
  selector:
    app: postgres
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: store
  namespace: store
  labels:
    app: store
spec:
  replicas: 1
  selector:
    matchLabels:
      app: store
  template:
    metadata:
      labels:
        app: store
    spec:
      containers:
        - name: store
          image: dirigiblelabs/dirigible-keycloak
          ports:
            - containerPort: 8080
          env:
            - name: DIRIGIBLE_DATABASE_PROVIDER
              value: "custom"
            - name: DIRIGIBLE_DATABASE_CUSTOM_DATASOURCES
              value: "POSTGRES"
            - name: DIRIGIBLE_DATABASE_DATASOURCE_NAME_DEFAULT
              value: "POSTGRES"
            - name: POSTGRES_DRIVER
              value: "org.postgresql.Driver"
            # The PostgreSQL JDBC URL: jdbc:postgresql://<postgres-service-name>.<namespace>:5432/<database-name>
            - name: POSTGRES_URL
              value: "jdbc:postgresql://postgres-jdbc:5432/dirigible"
            # The PostgreSQL user
            - name: POSTGRES_USERNAME
              value: "dirigible"
            # The PostgreSQL user's password
            - name: POSTGRES_PASSWORD
              value: "dirigible"
            - name: DIRIGIBLE_SCHEDULER_DATABASE_DRIVER
              value: "org.postgresql.Driver"
            # The PostgreSQL JDBC URL: jdbc:postgresql://<postgres-service-name>.<namespace>:5432/<database-name>
            - name: DIRIGIBLE_SCHEDULER_DATABASE_URL
              value: "jdbc:postgresql://postgres-jdbc:5432/dirigible"
            # The PostgreSQL user
            - name: DIRIGIBLE_SCHEDULER_DATABASE_USER
              value: "dirigible"
            # The PostgreSQL user's password
            - name: DIRIGIBLE_SCHEDULER_DATABASE_PASSWORD
              value: "dirigible"
            - name: DIRIGIBLE_SCHEDULER_DATABASE_DELEGATE
              value: "org.quartz.impl.jdbcjobstore.PostgreSQLDelegate"
            - name: KEYCLOAK_CONFIDENTIAL_PORT
              value: "443"
            - name: KEYCLOAK_SSL_REQUIRED
              value: "none"
            - name: KEYCLOAK_CLIENT_ID
              value: "dirigible"
            - name: KEYCLOAK_REALM
              value: "master"
            # Replace the placeholder with your domain name (e.g. ingress.dev.blog.shoot.canary.k8s-hana.ondemand.com)
            - name: KEYCLOAK_AUTH_SERVER_URL
              value: "https://auth.<your-domain-name>/auth"
---
apiVersion: v1
kind: Service
metadata:
  name: store
  namespace: store
  labels:
    app: store
spec:
  ports:
  - port: 8080
  type: ClusterIP
  selector:
    app: store
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
    certmanager.k8s.io/cluster-issuer: letsencrypt-production
    kubernetes.io/ingress.class: "nginx"
  name: store
  namespace: store
spec:
  tls:
  # Replace the placeholder with your domain name (e.g. ingress.dev.blog.shoot.canary.k8s-hana.ondemand.com)
  - hosts:
    - store.<your-domain-name>
    secretName: store-certificate
  rules:
    # Replace the placeholder with your domain name (e.g. ingress.dev.blog.shoot.canary.k8s-hana.ondemand.com)
    - host: store.<your-domain-name>
      http:
        paths:
          - path: /
            backend:
              serviceName: store
              servicePort: 8080
